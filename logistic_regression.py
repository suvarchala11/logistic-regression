# -*- coding: utf-8 -*-
"""logistic regression

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GltXARE5tWdFQhBSlTX6iEADJ-ddh6aR
"""

import pandas as pd
import plotly.express as px

df = pd.read_csv("https://raw.githubusercontent.com/mamtawardhani/Datasets-for-linear-and-logistic-regression/main/score-accepted.csv")

score_list = df["Score"].tolist()
accepted_list = df["Accepted"].tolist()

import matplotlib.pyplot as plotly
from sklearn.linear_model import LogisticRegression
import numpy as np

X = np.reshape(score_list,(len(score_list),1))
Y = np.reshape(accepted_list,(len(accepted_list),1))

lr = LogisticRegression()
lr.fit(X,Y)

def model(x):
  return 1/(1+ np.exp(-x))
    
chances = model(X * lr.coef_ + lr.intercept_).ravel()
#NumPy aims to provide an array object that is up to 50x faster than traditional Python lists.
#ravel() in Python. The numpy module of Python provides a function called numpy. ravel, which is used to change a 2-dimensional array or a multi-dimensional array into a contiguous flattened array.

user_score = float(input("enter your marks here:- "))
chances = model(user_score * lr.coef_ + lr.intercept_).ravel()[0]
if chances <= 0.01:
  print("The student will not get accepted")
elif chances>= 1:
  print("The student will get accepted")
elif chances< 0.5:
  print("The student might not get accepted")
else:
  print("The student may get accepted")